var u=Object.defineProperty;var t=(e,a)=>u(e,"name",{value:a,configurable:!0});(function(){"use strict";onmessage=t(function(s){switch(s.data.message){case"connect":a();break;case"disconnect":n();break;case"reopenPort":i();break}},"onmessage");let e;async function a(s){return e=(await navigator.serial.getPorts().catch(o=>{self.postMessage({message:"connectionStatus",operation:"connect",error:o})})).filter(o=>o.getInfo().usbProductId===22336)[0],c()}t(a,"connect");async function c(){await e.open({baudRate:1}).then(()=>{self.postMessage({message:"connectionStatus",operation:"connect",status:"success"})}).catch(s=>{self.postMessage({message:"connectionStatus",operation:"connect",error:s})}),self.postMessage({message:"getReadableStream",stream:e.readable},[e.readable]),self.postMessage({message:"getWritableStream",stream:e.writable},[e.writable])}t(c,"openPort");async function n(s=1){await e.close().then(()=>{self.postMessage({message:"connectionStatus",operation:"disconnect",status:"success"})}).catch(r=>{if(s<3)return s++,setTimeout(()=>n(s),100);self.postMessage({message:"connectionStatus",operation:"disconnect",error:r})})}t(n,"closePort");async function i(){return await n(),c()}t(i,"reopenPort")})();
